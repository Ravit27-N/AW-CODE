server:
  tomcat:
    connection-timeout: 10m
  shutdown: graceful
spring:
  mvc:
    servlet:
      path: /api
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  application:
    name: signature-process-control
  jpa:
    open-in-view: false
  cloud:
    openfeign:
      lazy-attributes-resolution: true
  security:
    oauth2:
      client:
        provider:
          keycloak:
            authorization-uri: ${signature.security.keycloak-base-url}/realms/${signature.security.keycloak-realm}/protocol/openid-connect/authorize
            token-uri: ${signature.security.keycloak-base-url}/realms/${signature.security.keycloak-realm}/protocol/openid-connect/token
        registration:
          signature-process-control:
            provider: keycloak
            client-id: ${SIGNATURE_PROCESS_CONTROL_CLIENT_ID}
            client-secret: ${SIGNATURE_PROCESS_CONTROL_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope:
              - openid
management:
  endpoint:
    info:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info, health

signature:
  process-control:
    front-end-url: ${FRONT_END_URL}
    invitation-context-path: ${INVITATION_CONTEXT_PATH}
    phone-number:
      missing-length: ${SIGNATURE_PHONE_NUMBER_MISSING_LENGTH}
    recipient-context-path: ${RECIPIENT_CONTEXT_PATH}
    approval-context-path: ${APPROVAL_CONTEXT_PATH}
    view-context-path: ${VIEW_CONTEXT_PATH},
    sign-completed-context-path: ${SIGN_COMPLETED_CONTEXT_PATH}
  security:
    #Configure cors origin urls
    origins: ${SIGNATURE_ALLOWED_ORIGIN}
    keycloak-realm: ${SIGNATURE_KEYCLOAK_REALM}
    keycloak-base-url: ${SIGNATURE_KEYCLOAK_URL}
  keycloak:
    auth-server-url: ${signature.security.keycloak-base-url}
    realm: ${signature.security.keycloak-realm}
    resource: ${SIGNATURE_PROCESS_CONTROL_CLIENT_ID}
    secret: ${SIGNATURE_PROCESS_CONTROL_CLIENT_SECRET}
    technical-user-id: ${SIGNATURE_KEYCLOAK_TECHNICAL_USER_UUID}
  #    resource: ${SIGNATURE_PROFILE_CLIENT_ID}
  #    secret: ${SIGNATURE_PROFILE_CLIENT_SECRET}
  feign-client:
    client-id: ${SIGNATURE_PROCESS_CONTROL_CLIENT_ID}
    client-registration-id: ${SIGNATURE_PROCESS_CONTROL_CLIENT_ID}
    enabled: true
    clients:
      # Signature project management API base url endpoint
      project-url: ${SIGNATURE_PROJECT_URL}
      profile-url: ${SIGNATURE_PROFILE_URL}
      corporate-profile-url: ${SIGNATURE_CORPORATE_PROFILE_URL}
      notification-url: ${SIGNATURE_NOTIFICATION_URL}
      signature-identity-verification-url: ${SIGNATURE_IDENTITY_VERIFICATION_URL}
    contexts:
      corporate-profile-context-path: ${SIGNATURE_CORPORATE_PROFILE_CONTEXT_PATH}
      project-context-path: ${SIGNATURE_PROJECT_CONTEXT_PATH}
      profile-context-path: ${SIGNATURE_PROFILE_CONTEXT_PATH}
      notification-context-path: ${SIGNATURE_NOTIFICATION_CONTEXT_PATH}
      signature-identity-verification-context-path: ${SIGNATURE_IDENTITY_VERIFICATION_CONTEXT_PATH}
  swagger:
    info:
      securityKey: signature-process-control
  api-ng:
    url: ${API_NG_HOST}
    context-path: ${API_NG_BASE_PATH}
    access-token: ${API_NG_ACCESS_TOKEN}
    certigna-user: ${API_NG_USER:pps#test}
    certigna-hash: ${API_NG_HASH:ySsPUR23}
    certigna-role: ${API_NG_ROLE:2}
    default-language: ${API_NG_DEFAULT_LANGUAGE:fr}
    test-file-path: ${API_NG_TEST_FILE}
    front-end-url: ${FRONT_END_URL}
  tdc-service:
    url: ${TDC_SERVICE_URL}
    tenant-id: ${TDC_SERVICE_TENANT_ID}
    account: ${TDC_SERVICE_ACCOUNT}
    password: ${TDC_SERVICE_PASS}
    base-id: ${TDC_SERVICE_BASS_ID}
  impersonate-token:
    secrete-key: ${IMPERSONATE_TOKEN_SECRETE_KEY}
  setting:
    urgent-project: 48
springdoc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha
    oauth:
      client-id: ${signature.keycloak.resource}
      client-secret: ${signature.keycloak.secret}
      realm: ${signature.keycloak.realm}
feign:
  client:
    config:
      default:
        connectTimeout: 160000000
        readTimeout: 160000000