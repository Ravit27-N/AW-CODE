<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.tessi.cxm.pfl</groupId>
		<artifactId>cxm-services</artifactId>
		<version>1.3.1</version>
		<relativePath/>
	</parent>

	<groupId>com.tessi.cxm.pfl.ms3</groupId>
	<artifactId>cxm-flow-traceability</artifactId>
	<packaging>jar</packaging>
	<name>cxm-flow-traceability</name>
	<version>1.28.0</version>
	<properties>
		<lib-module-shared.version>1.30.0</lib-module-shared.version>
		<lib-service-discovery-auto-config.version>1.0.1</lib-service-discovery-auto-config.version>
		<lib-common-flow-treatment.version>1.20.0</lib-common-flow-treatment.version>
		<spring-cloud-stream.version>3.1.6</spring-cloud-stream.version>
		<spring-cloud-stream-binder-rabbit.version>3.1.6</spring-cloud-stream-binder-rabbit.version>
		<spring-cloud-stream-binder-kafka.version>3.1.6</spring-cloud-stream-binder-kafka.version>
		<jackson-dataformat-xml.version>2.12.6</jackson-dataformat-xml.version>
		<outDir>${project.build.directory}</outDir>
	</properties>
    
    <distributionManagement>
        <repository>
          <id>cxm-maven</id>
          <url>https://nexus.interne.tessi-techno.fr/repository/cxm-maven</url>
        </repository>
    </distributionManagement>
    
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<version>${spring-cloud-stream.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka</artifactId>
			<version>${spring-cloud-stream-binder-kafka.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
			<version>${spring-cloud-stream-binder-rabbit.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
			<version>${lombok.version}</version>
		</dependency>
		<dependency>
			<groupId>com.tessi.cxm.pfl.shared</groupId>
			<artifactId>lib-module-shared</artifactId>
			<version>${lib-module-shared.version}</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-quartz</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.tessi.cxm.pfl.shared</groupId>
			<artifactId>lib-service-discovery-auto-config</artifactId>
			<version>${lib-service-discovery-auto-config.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>${hibernate-jpamodelgen.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-task-core</artifactId>
			<version>${spring-cloud-task-batch.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-55</artifactId>
			<version>${hibernate-types-55.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${jackson-dataformat-xml.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.tessi.cxm.pfl.shared</groupId>
			<artifactId>lib-common-flow-treatment</artifactId>
			<version>${lib-common-flow-treatment.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring-oxm.version}</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-test</artifactId>
      <scope>test</scope>
	  <version>${spring-batch-test.version}</version>
    </dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.10.0</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec-http</artifactId>
			<version>4.1.76.Final</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-quartz</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.batch/spring-batch-core -->
        <!--
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
			<version>4.3.5</version>
			<scope>compile</scope>
		</dependency>
        -->

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>

		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-spring</artifactId>
			<version>4.0.3</version>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-provider-jdbc-template</artifactId>
			<version>4.0.3</version>
		</dependency>

	</dependencies>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<activatedProperties>dev</activatedProperties>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-stream-binder-kafka</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-stream-binder-kafka</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<activatedProperties>prod</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<activatedProperties>test</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>integration</id>
			<properties>
				<activatedProperties>integration</activatedProperties>
			</properties>
		</profile>

		<profile>
			<id>rabbit</id>
			<properties>
				<activatedProperties>rabbit</activatedProperties>
			</properties>
		</profile>

		<profile>
			<id>kafka</id>
			<properties>
				<activatedProperties>kafka</activatedProperties>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}-v.${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>/sql/**</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<layers>
						<enabled>true</enabled>
					</layers>
					<outputDirectory>${outDir}</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<version>${hibernate-jpamodelgen.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${mave-surfire.plugins.version}</version>
				<configuration>
					<skipTests>${maven.test.skip}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
					<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
					<output>file</output>
					<append>true</append>
					<skip>${maven.test.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>report-aggregate</id>
						<phase>verify</phase>
						<goals>
							<goal>report-aggregate</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/site/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
