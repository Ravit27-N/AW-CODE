input {
    jdbc {
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_driver_library => "/usr/share/logstash/drivers/postgresql-42.2.18.jar"
        jdbc_connection_string => "jdbc:postgresql://db:5432/${POSTGRES_DB}"
        jdbc_validate_connection => true
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"
        jdbc_paging_enabled => true
        tracking_column => "updated_at"
        tracking_column_type => "timestamp"
        record_last_run => true
        use_column_value => true
        clean_run => true
        schedule => "1 * * * * *"
        type => "candidate"
        statement_filepath => "/usr/share/logstash/config-dir/sql/candidate-query.sql"
        last_run_metadata_path => "/usr/share/logstash/last-run-values/.candidate_last_run_value"
    }
    jdbc {
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_driver_library => "/usr/share/logstash/drivers/postgresql-42.2.18.jar"
        jdbc_connection_string => "jdbc:postgresql://db:5432/${POSTGRES_DB}"
        jdbc_validate_connection => true
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"
        jdbc_paging_enabled => true
        tracking_column => "updated_at"
        tracking_column_type => "timestamp"
        record_last_run => true
        use_column_value => true
        clean_run => true
        schedule => "1 * * * * *"
        type => "candidate_report"
        statement_filepath => "/usr/share/logstash/config-dir/sql/candidate-report-query.sql"
        last_run_metadata_path => "/usr/share/logstash/last-run-values/.candidate_report_last_run_value"
    }
    jdbc {
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_driver_library => "/usr/share/logstash/drivers/postgresql-42.2.18.jar"
        jdbc_connection_string => "jdbc:postgresql://db:5432/${POSTGRES_DB}"
        jdbc_validate_connection => true
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"
        tracking_column => "updated_at"
        tracking_column_type => "timestamp"
        record_last_run => true
        use_column_value => true
        clean_run => true
        schedule => "1 * * * * *"
        type => "interview"
        jdbc_paging_enabled => true
        last_run_metadata_path => "/usr/share/logstash/last-run-values/.interview_jdbc_sql_last_value"
        statement_filepath => "/usr/share/logstash/config-dir/sql/interview-query.sql"
    }
    jdbc {
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_driver_library => "/usr/share/logstash/drivers/postgresql-42.2.18.jar"
        jdbc_connection_string => "jdbc:postgresql://db:5432/${POSTGRES_DB}"
        jdbc_validate_connection => true
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"
        tracking_column => "updated_at"
        tracking_column_type => "timestamp"
        record_last_run => true
        use_column_value => true
        clean_run => true
        schedule => "1 * * * * *"
        type => "reminder"
        jdbc_paging_enabled => true
        last_run_metadata_path => "/usr/share/logstash/last-run-values/.reminder_jdbc_sql_last_value"
        statement_filepath => "/usr/share/logstash/config-dir/sql/reminder-query.sql"
    }
}

filter {
    if [type] == "candidate" {
        mutate {
            add_field => {
                "_class" => "com.allweb.recruit.entities.elastic.CandidateElasticsearchDocument"
            }
        }
        json {
            source => "candidate_status"
            target => "candidate_status"
        }
        json {
            source => "universities"
            target => "universities"
        }
        json {
            source => "interviews"
            target => "interviews"
        }
        json {
            source => "[interviews][result][score]"
            target => "[interviews][result][score]"
        }
        date {
            match => ["[interviews][last_interview]", "dd-MM-yyyy HH:mm:ss"]
            target => "[interviews][last_interview]"
        }
    }
    if [type] == "candidate_report"{
        json {
            source => "universities"
            target => "universities"
            }
        json {
            source => "interviews"
            target => "interviews"
        }
        json {
            source => "[interviews][result][score]"
            target => "[interviews][result][score]"
        }
    }
    if [type] == "reminder" {
        json {
            source => "candidate"
            target => "candidate"
        }
        json {
            source => "interview"
            target => "interview"
        }
    }
    if [type] == "interview" {
        json {
            source => "candidate"
            target => "candidate"
        }
    }
}

output {
    if[type] == "candidate" {
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            index => "idx_candidate"
            document_id => "%{id}"
            codec => "json"
            ecs_compatibility => "v1"
            template_name => "idx_candidate"
            template => "/usr/share/logstash/config-dir/templates/candidate-index-template.json"
            template_overwrite => true
        }
    }
    if[type] == "candidate_report" {
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            index => "idx_candidate_report"
            document_id => "%{id}"
            codec => "json"
            ecs_compatibility => "v1"
            template_name => "idx_candidate_report"
            template => "/usr/share/logstash/config-dir/templates/candidate-report-index-template.json"
            template_overwrite => true
        }
    }
    if[type] == "interview" {
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            index => "idx_interview"
            document_id => "%{id}"
            codec => "json"
            ecs_compatibility => "v1"
            template_name => "idx_interview"
            template => "/usr/share/logstash/config-dir/templates/interview-index-template.json"
            template_overwrite => true
        }
    }
    if[type] == "reminder" {
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            index => "idx_reminder"
            document_id => "%{id}"
            ecs_compatibility => "v1"
            codec => "json"
            template_name => "idx_reminder"
            template => "/usr/share/logstash/config-dir/templates/reminder-index-template.json"
            template_overwrite => true
        }
    }
}