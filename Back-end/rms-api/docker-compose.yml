version: "3.3"
services:
  rms-api:
    image: registry.gitlab.com/allweb-rms/rms-api/rms-api:latest
    container_name: rms-api
    volumes:
      - /home/docker/.m2/:/root/.m2/
      - /home/docker/rms/logs:/rms/logs
      - /home/docker/rms/images:/upload
    ports:
      - "8083:8183"
    restart: always
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    depends_on:
      - db
    links:
      - db
    env_file:
      - core.env
    entrypoint: ["/bin/sh", "entrypoint.sh"]
    networks:
      - elknetwork

  db:
    container_name: postgresdb
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 3
    env_file:
      - core.env
    networks:
      - elknetwork

  # running on a single node for development.
  # prod settings here: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-prod-mode
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    container_name: elasticsearch
    hostname: elasticsearch
    volumes:
      - "es_data:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
    #      - "9300:9300"
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=springelasticgenie
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elknetwork

  allwebrms:
    image: registry.gitlab.com/allweb-rms/allweb-rms/allwebrms:latest
    container_name: allwebrms
    ports:
      - "8084:80"
    depends_on:
      - rms-api
    networks:
      - elknetwork
    environment:
      API_URL: "http://10.2.7.2:8083/api/v1"
      KEYCLOAK_URL: "http://10.2.7.2:8080/auth/realms/aw_recruitment"

  keycloak:
    image: quay.io/keycloak/keycloak:12.0.2
    container_name: keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: db
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_SCHEMA: public
      DB_PASSWORD: postgres
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-import.json
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    #command:
    # - "-b 0.0.0.0"
    # - "-Dkeycloak.import=/opt/jboss/keycloak/imports/realm-import.json"
    volumes:
      - ./keycloak/realm-import.json:/opt/jboss/keycloak/imports/realm-import.json
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - elknetwork

volumes:
  postgres_data:
  es_data:
    driver: local

networks:
  elknetwork:
    driver: bridge
